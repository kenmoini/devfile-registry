schemaVersion: 2.2.2
metadata:
  name: kemo-armillary
  displayName: Kemo Armillary
  description: Complete Armillary development environment
  icon: https://raw.githubusercontent.com/devfile-samples/devfile-stack-icons/main/golang.svg
  tags:
    - Go
    - NodeJS
    - Node
    - Armillary
    - Kemo Ventures
  projectType: Polyglot
  language: Polyglot
  provider: Ken Moini
  source: https://github.com/kenmoini/devfile-registry/stacks/kemo-armillary/1.0.1/
  version: 1.0.1
projects:
  - name: armillary
    git:
      remotes:
        origin: 'git@github.com:KemoVentures/armillary.git'
      checkoutFrom:
        revision: main
  - name: armillary-ui
    git:
      remotes:
        origin: 'git@github.com:KemoVentures/armillary-ui.git'
      checkoutFrom:
        revision: main
components:
#  - name: build
#    image:
#      imageName: go-image:latest
#      dockerfile:
#        uri: docker/Dockerfile
#        buildContext: .
#        rootRequired: false
#  - name: deploy
#    kubernetes:
#      uri: kubernetes/deploy.yaml
#      endpoints:
#      - name: http-8081
#        targetPort: 8081
  - container:
      endpoints:
        - name: https-go
          protocol: https
          targetPort: 8080
        - exposure: none
          name: debug
          targetPort: 5858
      image: registry.access.redhat.com/ubi9/go-toolset:1.21.9-1.1714671022
      args: ['tail', '-f', '/dev/null']
      env:
        - name: KUBEDOCK_PARAMS
          value: "--reverse-proxy --kubeconfig /home/user/.kube/config --initimage quay.io/agiertli/kubedock:0.13.0"
        - name: KUBEDOCK_ENABLED
          value: 'true'
        - name: DOCKER_HOST
          value: 'tcp://127.0.0.1:2475'
        - name: TESTCONTAINERS_RYUK_DISABLED
          value: 'true'
        - name: TESTCONTAINERS_CHECKS_DISABLE
          value: 'true'
        - name: DEBUG_PORT
          value: '5858'
      memoryLimit: 1024Mi
      mountSources: true
    name: runtime
commands:
  #- id: build-image
  #  apply:
  #    component: build
  #- id: deployk8s
  #  apply:
  #    component: deploy
  #- id: deploy
  #  composite:
  #    commands:
  #      - build-image
  #      - deployk8s
  #    group:
  #      kind: deploy
  #      isDefault: true
  - exec:
      env:
        - name: GOPATH
          value: ${PROJECT_SOURCE}/.go
        - name: GOCACHE
          value: ${PROJECT_SOURCE}/.cache
      commandLine: go build main.go
      component: runtime
      group:
        isDefault: true
        kind: build
      workingDir: ${PROJECT_SOURCE}
    id: build
  - exec:
      commandLine: ./main
      component: runtime
      group:
        isDefault: true
        kind: run
      workingDir: ${PROJECT_SOURCE}
    id: run

  - exec:
      commandLine: |
        GOPATH=${PROJECT_SOURCE}/.go \
        GOCACHE=${PROJECT_SOURCE}/.cache \
        dlv \
          --listen=127.0.0.1:${DEBUG_PORT} \
          --only-same-user=false \
          --headless=true \
          --api-version=2 \
          --accept-multiclient \
          debug --continue main.go
      component: runtime
      group:
        isDefault: true
        kind: debug
      workingDir: ${PROJECT_SOURCE}
    id: debug
